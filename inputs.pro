;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;inputs.pro
;
;Set the following input parameters that are used by v4.0 of ddisk.pro. Note that
;changing any of the first set of parameters listed just below (N_sizes through tau2)
;requires executing ddisk.pro again. However, changes to any of the later parameters
;does not change the output of ddisk.pro, but will alter the results & figures
;that are generated by figs.pro. For details, see 'Diagnosing Circumstellar Debris Disks'
;(Hahn, 2010, ApJ).
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;Number of different dust sizes. 200 works well.
N_sizes = 200

;Number of distinct longitudes in a planetesimal ring that produce same-sized dust
;grains. 100 works well. 
N_longitudes = 100

;Number of dust-producing planetesimal rings. 1 to 5 works. If execution times
;seem too long, try reducing N_sizes, N_longitudes, or N_rings.
N_rings = 1

;Inner radius of planetesimal disk, in units of the disk's outer radius ar. Should be
;less that 1, and is only used when N_rings>1.
ar_inner = 0.7

;Power-law for the planetesimal disk's dust production rate. Only used when N_rings>1
c_disk = 0.0

;The sizes of the dust produced by the birth ring are chosen so that their apoapse
;distances Q=a*(1+e) range over the following distances, in units of the outermost
;planetesimal ring's radius ar. Be sure that 1 < Q_apo_min < Q_apo_max. Also keep
;in mind that execution times get longer for smaller values of Q_apo_min. 
Q_apo_min = 1.15
Q_apo_max = 150.0

;Power-law exponent for the size distribution of dust produced by the birth ring.
q_size = 3.5

;Dust collisional specific energy in cgs [ergs/gm = (cm/sec)^2] units. Must be >0.
Q_star_cgs = 1.0e6

;Set = 'YES' to evolve system over time, which can take a while. Otherwise, the
;code just solves for the dust grain's equilibrium abundances, which is much faster.
evolve_system = 'YES'

;Dimensionless time when dust production stops. Set tau_stop<0 to keep dust
;production steady for all times.
tau_stop = -100.0

;Output is sampled N_times over the dimensionless time axis tau, where tau is
;sampled logarithmically over tau1 < tau < tau2, except with tau[0]=0.
N_times = 1000
tau1 = 5.0e-5
tau2 = 2.0e4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Changing any of these parameters below does not alter ddisk.pro's output.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;Total dust mass production rate in gm/sec.
M_dpr_cgs = 1.0e13

;Radius of outermost planetesimal ring in AU, known as r_out in the paper.
ar_au = 50.0

;Dust light-scattering asymmetry parameter.
g_dust = 0.4

;Light scattering efficiency
Q_scat = 0.1

;Dust inclinations (in radians) = disk scale-height/radius.
I_dust = 0.1

;Grain volume density in cgs units (gm/cm^3).
dust_density_cgs = 1.0

;Set phase_law = 'HG' to choose Henyey-Greenstein phase function.
phase_law = 'HG'

;Age of star, in years.
t_star_yr = 5.0e8

;Mass of the central star in solar masses.
M_star_solar = 1.0

;Luminosity of central star in solar luminosities.
L_star_solar = 1.0

;Effective temperature of central star in Kelvins.
T_star_K = 5780.0

;Observation wavelength, in nanometers.
wavelength_nm = 606.0

;Set display_orbits=1 to view all pairs of crossing orbits (slow!).
display_orbits = 0

;Set plotting range for when plotting crossing orbits, in units of ring radius ar.
display_range = 3.5

;Set wait time between successive plots, in seconds. Ignored if display_orbits=0
delay = 0.2

;Store input parameters in a structure that is easily passed to subroutines.
inputs = { N_sizes:N_sizes, N_longitudes:N_longitudes, N_rings:N_rings, $
    ar_inner:ar_inner, c_disk:c_disk, Q_apo_min:Q_apo_min, Q_apo_max:Q_apo_max, $
    q_size:q_size, N_times:N_times, tau1:tau1, tau2:tau2, tau_stop:tau_stop, $
    evolve_system:evolve_system, M_dpr_cgs:M_dpr_cgs, phase_law:phase_law, $
    I_dust:I_dust, g_dust:g_dust, Q_scat:Q_scat, $
    ar_au:ar_au, M_star_solar:M_star_solar, L_star_solar:L_star_solar, $
    T_star_K:T_star_K, t_star_yr:t_star_yr, wavelength_nm:wavelength_nm, $
    Q_star_cgs:Q_star_cgs, dust_density_cgs:dust_density_cgs, $
    display_orbits:display_orbits, display_range:display_range, delay:delay }
